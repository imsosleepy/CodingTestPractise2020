"""
백준 1783. 병든나이트
blog :
problem : https://www.acmicpc.net/problem/1783
"""

import sys

if __name__ == "__main__":
    # N과 M의 최대값이 2000000000이라 BFS 문제는 아니다. 탐색으로 푸는 문제가 아니란 점에 유의
    N, M = map(int, sys.stdin.readline().strip().split())
    result = 0
    # 조건 1
    # N 1 일 때: 제자리에서 움직일 수 없음
    if N == 1:
        result = 1 # 조건에서 시작점이 포함된다고 함
    # 조건 2
    # N이 2 일 때: 이동 방법을 네 가지를 다 사용할 수 없음
    # 때문에 최대 4회가 된다.
    # M 값에 따라, 1(M<3),2(M>=3, M<5),3(M>=5,M<7),4(M>=7)회로 나뉨
    # -----------------------------
    # |   |   | x |   |   |   | x |
    # -----------------------------
    # | x |   |   |   | x |   |   |
    # -----------------------------
    elif N == 2:
        result = min(4, int((M + 1)/2))
    # 조건 3
    # N 3 이상 일 때,
    # 이동 횟수가 늘 최대가 되어야 한다는 점을 생각해야 한다.
    # M이 4이하일 땐 M
    # M이 5, 6일 땐 4
    # 주의할 점은 이동했기 때문에 M=4에서 M=5로 이동할 수 없다는 것이다.
    # M이 4일 때 이미 네 번 이동했고, 이 위치로 이동하는데 동일한 이동 방법이 사용됐기 때문에 추가적인 이동이 불가능하다.
    # 때문에 M=5로 이동할 때는 M=3에서 와야한다.
    # M이 7이 될 때 모든 이동 방법이 한번씩 사용 됐다. 이 후로는 최선만 선택해서 이동한다.
    # M이 7이상일 땐 M-2
    # -----------------------------------------
    # |   | x |   | x |   |   |   | x |   | x |
    # -----------------------------------------
    # |   |   |   |   | x |   |   |   |   |   |
    # -----------------------------------------
    # | x |   | x |   |   |   | x |   | x |   |
    # -----------------------------------------
    # https://sw-ko.tistory.com/155 참고
    else:
        if M <= 4:
            result = M
        elif M == 5 or M == 6:
            result = 4
        else:
            result = M - 2

    print(result)




